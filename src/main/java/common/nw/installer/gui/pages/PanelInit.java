package common.nw.installer.gui.pages;


import common.nw.core.gui.PageHolder;
import common.nw.core.utils.SwingUtils;

import javax.swing.*;
import java.awt.*;

/**
 * @author Nuklearwurst
 */
public class PanelInit implements PageHolder.IExtendedPageHandler {
	private JTextPane txtInit;
	public JTextField txtUrl;
	public JCheckBox chbxDownloadLibraries;
	private JPanel panel_init;

	public PanelInit() {
		txtInit.setBackground(SystemColor.menu);
		txtUrl.setComponentPopupMenu(SwingUtils.createTextPopupMenu(txtUrl));
	}

	@Override
	public Object getProperty(String s) {
		return null;
	}

	@Override
	public void onPageOpened(PageHolder holder, boolean forward) {

	}

	@Override
	public boolean onPageClosed(PageHolder holder, boolean forward) {
		return true;
	}

	@Override
	public JPanel getPanel() {
		return panel_init;
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		panel_init = new JPanel();
		panel_init.setLayout(new GridBagLayout());
		panel_init.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5), null));
		final JPanel spacer1 = new JPanel();
		GridBagConstraints gbc;
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 3;
		gbc.gridwidth = 2;
		gbc.weighty = 1.0;
		gbc.fill = GridBagConstraints.VERTICAL;
		panel_init.add(spacer1, gbc);
		final JLabel label1 = new JLabel();
		label1.setText("Modpack Url:");
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 1;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.insets = new Insets(0, 0, 0, 4);
		panel_init.add(label1, gbc);
		txtUrl = new JTextField();
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 1;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		panel_init.add(txtUrl, gbc);
		chbxDownloadLibraries = new JCheckBox();
		chbxDownloadLibraries.setMargin(new Insets(4, 2, 2, 2));
		chbxDownloadLibraries.setSelected(true);
		chbxDownloadLibraries.setText("Download supported Libraries (recommended)");
		chbxDownloadLibraries.setToolTipText("You should download supported libraries using the installer. Otherwise you have to do it manually.");
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 2;
		gbc.gridwidth = 2;
		gbc.anchor = GridBagConstraints.WEST;
		panel_init.add(chbxDownloadLibraries, gbc);
		txtInit = new JTextPane();
		txtInit.setEditable(false);
		txtInit.setFont(new Font(txtInit.getFont().getName(), Font.BOLD, txtInit.getFont().getSize()));
		txtInit.setMargin(new Insets(6, 6, 12, 6));
		txtInit.setText("Welcome to The Modpack Installer\n\nThis installer will guide you through the modpack installation process.\n\nNow insert the modpack Url:");
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.gridwidth = 2;
		gbc.weightx = 1.0;
		gbc.fill = GridBagConstraints.BOTH;
		panel_init.add(txtInit, gbc);
		label1.setLabelFor(txtUrl);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return panel_init;
	}
}
